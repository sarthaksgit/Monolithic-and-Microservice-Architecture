# Steps to create an Monolithic Architecture in AWS
Hereâ€™s a step-by-step guide how I created an EC2 instance and deploy WordPress and MySQL on the same instance in AWS:

### Step 1: Launch an EC2 Instance

1. **Sign in to the AWS Management Console**.
2. **Navigate to EC2**:
   - Go to the EC2 Dashboard.
   - Click on "Launch Instance".

3. **Choose an Amazon Machine Image (AMI)**:
   - Select an AMI. For this guide, choose the **Amazon Linux 2 AMI**.

4. **Choose an Instance Type**:
   - Select an instance type. For a small setup, **t2.micro** (eligible for the free tier) is sufficient.

5. **Configure Instance Details**:
   - Default settings are generally fine. Ensure the instance is launched in the desired VPC and subnet.

6. **Add Storage**:
   - The default storage size is typically 8 GB. You may increase this if you expect to need more space.

7. **Add Tags**:
   - Optionally, add tags to your instance for better management.

8. **Configure Security Group**:
   - Create a new security group with the following inbound rules:
     - **HTTP (port 80)**: Allow from anywhere (0.0.0.0/0).
     - **HTTPS (port 443)**: Allow from anywhere (0.0.0.0/0).
     - **SSH (port 22)**: Allow from your IP address (you can use My IP).

9. **Review and Launch**:
   - Review your settings and click "Launch".
   - Select an existing key pair or create a new one to SSH into your instance.
   - Launch the instance.

### Step 2: Connect to Your EC2 Instance

1. **Connect via SSH**:
   - Open a terminal (Mac/Linux) or PuTTY (Windows).
   - Connect using the following command (replace `your-key-pair.pem` and `your-ec2-public-dns` with your key pair file and instance's public DNS):
     
     ssh -i "your-key-pair.pem" ec2-user@your-ec2-public-dns

### Step 3: Install Apache, MySQL, and PHP (LAMP Stack)

1. **Update the package index**:

   sudo yum update -y

2. **Install Apache**:

   sudo yum install -y httpd
   sudo systemctl start httpd
   sudo systemctl enable httpd

3. **Install MySQL (MariaDB)**:
   sudo yum install -y mariadb-server
   sudo systemctl start mariadb
   sudo systemctl enable mariadb

4. **Secure MySQL Installation**:

   sudo mysql_secure_installation

5. **Install PHP**:

   sudo yum install -y php php-mysqlnd
   sudo systemctl restart httpd

### Step 4: Install WordPress

1. **Download and Extract WordPress**:

   cd /var/www/html
   sudo wget https://wordpress.org/latest.tar.gz
   sudo tar -xzf latest.tar.gz
   sudo rm latest.tar.gz
   sudo mv wordpress/* .
   sudo rmdir wordpress

2. **Set Permissions**:

   sudo chown -R apache:apache /var/www/html
   sudo chmod -R 755 /var/www/html

### Step 5: Configure WordPress

1. **Create a MySQL Database for WordPress**:

   sudo mysql -u root -p

   In the MySQL prompt, run:
   CREATE DATABASE wordpress;
   CREATE USER 'wordpressuser'@'localhost' IDENTIFIED BY 'yourpassword';
   GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpressuser'@'localhost';
   FLUSH PRIVILEGES;
   EXIT;

2. **Configure WordPress**:

   - Rename the `wp-config-sample.php` file to `wp-config.php`:

     cd /var/www/html
     sudo mv wp-config-sample.php wp-config.php

   - Edit the `wp-config.php` file:
     
     sudo nano wp-config.php
    
   - Set the database details:
     
     define( 'DB_NAME', 'wordpress' );
     define( 'DB_USER', 'wordpressuser' );
     define( 'DB_PASSWORD', 'yourpassword' );
     define( 'DB_HOST', 'localhost' );
     

3. **Complete the Installation via Web Browser**:
   - Open a web browser and navigate to your EC2 instance's public DNS (http://your-ec2-public-dns).
   - Follow the on-screen instructions to complete the WordPress installation.

### Step 6: Secure Your Instance

1. **Update your instance**:
   
   sudo yum update -y
   

2. **Configure Firewall**:
   - Ensure that your security groups are properly configured as mentioned in Step 1.

3. **Regular Backups**:
   - Consider regular backups of your WordPress site and MySQL database.

### Done!

I have now successfully deployed a WordPress site with a MySQL database on a single EC2 instance.